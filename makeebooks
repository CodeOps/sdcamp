#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
# This script convers markdown book to one of the serveral e-book
# formats supported with pandoc
#
# Samples:
# 	
# Build e-book for html for chinese and english languages
# 	$ makeebooks en ru
# or
# 	$ FORMAT=html makeebooks zh en
#
# Build e-book in 'epub' format for Chinese only
# 	$ FORMAT=epub makeebooks zh

if ARGV.length == 0
  puts "you need to specify at least one language. For example: makeebooks en"
  exit
end

name = File.basename(Dir.getwd)
format = ENV['FORMAT'] || 'html'
puts "using .#{format} (you can change it via FORMAT environment variable. try 'html' or 'epub')"

ARGV.each do |lang|
  puts "convert content for '#{lang}' language"

  if lang == 'zh'
    figure_title = 'å›¾'
  else 
    figure_title = 'Figure'
  end

  dir = File.expand_path(File.join(File.dirname(__FILE__), lang))
  book_content = ""
  Dir[File.join(dir, '**', '*.markdown')].sort.each do |input|
    puts "processing #{input}"
    content = File.read(input)
    content.gsub!(/Insert\s+(.*)(\.png)\s*\n?\s*#{figure_title}\s+(.*)/, '![\3](figures/\1-tn\2 "\3")')
    book_content << content
  end

  File.open("#{name}.#{lang}.markdown", 'w') do |output|
    output.write(book_content)
  end
  # pandoc -S -s --epub-metadata=metadata.xml -o sdcamp.zh.html --epub-stylesheet=epub/ProGit.css epub/title.txt sdcamp.zh.markdown 
  system('pandoc',
       '--standalone', 
       '--table-of-contents',
       '--epub-metadata', 'epub/metadata.xml',
       '--epub-stylesheet', 'epub/book.css', # this doesn't work 
       '--output', "#{name}.#{lang}.#{format}",
       "title.#{lang}.txt", # little strange, if this put under epub, pandoc reports error
       "#{name}.#{lang}.markdown")
  # pandoc -S --epub-metadata=metadata.xml -o progit.epub title.txt
end
