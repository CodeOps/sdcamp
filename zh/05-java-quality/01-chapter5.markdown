# 如何写好java程序 #
写程序对每个软件开发者是个基本功，在企业中要考虑代码是给团队一起看的，因此质量的要求要更高一点。

首先你要想把代码写好，经常想想你的代码几年以后还容易读吗？

当然很幸运，因为有有效的工具支撑，Java程序看起来比C/C++容易一点。

## 环境准备 ##
 * Eclipse IDE和相关的插件EcmEmma

## Java代码质量 ##
Java代码质量在企业中还是有很多有用的工具来保证的。

在个人环境下，如果用Eclipse，可以安装下面的很多插件来帮你自动做很多事情。主要考虑：

  1. 代码覆盖率，对JAVA来说，90%是一个不错的标杆，80%很勉强。
  2. 为了实现代码覆盖率，当然需要用到单元测试，JUnit 3/4都可以，TestNG也不错。不用说，100%通过是必须的。
  3. 代码风格和一些常见错误会有 Checkstyle和“FindBUGs/PMD/CPD.."
  
怎么写好代码当然是更重要的事，你要熟悉基本的5大设计原则（SRP,OCP,LSP,DIP,ISP)，理解这些以后，就可以学习如何用重构，如何用mock来隔离外部依赖写出好的单元测试。

测试驱动开发TDD是一个很有效的开发实践，要注重依据行为来驱动测试，而不是根据你的函数来写。

在服务器端，sonar是个非常好用的工具，它把需要的质量信息都归纳起来了。

Insert 18333fig0501.png 
图 5-1. Sonar

### 代码风格和编程规范 ###
编程规范（代码风格）不需要自己去创立，继承别人现有代码就可以了，建议用`checkstyle`工具强制控制一些基本的。

下面列出一些常见的，不过重要的是理解，而不是事后检查。千万不要打印或制定厚厚的规范，没用的。可以翻翻[Java的编程规范][javacoding]，下面列出几个：
 
  * 所有类的开头都要有Java文档的注释，要有用的。
  * 常量应该全部大写，单词之间由下划线分隔（例如，MAX_WORK_HOURS）。
  * 内部变量声明时应该对它进行初始化。
  * 不能有Magic number。        
 
### 安全代码 ###
有些时候还要考虑一下写出安全的代码，这和产品的性质有关，web类的会考虑得多一点。可以翻翻[Java的安全代码编程规范][javasec]:

  * 要对输入信息（参数、特殊字符、SQL注入）进行检查验证。
  * 不要到处保存敏感数据（在数据库、文件等地方）,如果必须要对它们进行保存，那就保存它们加密后的结果。
  * 要记录所有的或是有疑问的操作的日志。
  
### 单元测试 ###
这个应该是最简单的，但还是发现好多人都不做，要养成习惯，每个公共方法都需要至少有一个测试用例。

单元测试是代码的一部分，要养成同时签入版本库的习惯。而且如果本地没有100%测试通过，也不允许提交代码。

### 代码覆盖率 ###
有了单元测试，后就可以来看看代码覆盖率，建议在Eclipse中安装[EclEmma][eclemma]，非常好用。

Insert 18333fig0502.png 
图 5-2. Eclipse插件EclEmma

服务器端不用Sonar的话，cobertura不错。

### 重构 ###
重构分好几层，这里主要考虑日常的重构，千万不要跟经理或项目经理要求时间，这个是对他们不可见的，当然团队可以了解你重构的内容。

不要把重构当成很复杂的东西，大多数是很简单的，在Eclipse中点几下就可以了。

Insert 18333fig0503.png 
图 5-3. Eclipse中使用Refactor

最常见的重构有：
 
  * Rename (改名字）
  * Extract Method （提取函数）
  * Extract Interface （提取接口）

关键的是看到坏代码，要养成习惯去重构，基础是有质量高的单元测试。  

### 测试驱动开发 TDD ###

... 持续码字中，休息一会儿，休息一会儿 ...

### Mock ###

## 课后练习 ##
 1. 学习体会5大设计原则
 2. 翻看代码规范，记住一些自己遗漏的地方。

## 参考 ##
 1. The Principles of OOD : <http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod>
 2. 重构：<http://book.douban.com/subject/4262627/>
 3. 测试驱动的面向对象软件开发：<http://book.douban.com/subject/4910582/>
 4. EclEmma: <http://www.eclemma.org/>
 
 [javacoding]: http://www.oracle.com/technetwork/java/codeconv-138413.html
 [javasec]:    http://www.oracle.com/technetwork/java/seccodeguide-139067.html
 [eclemma]:    http://www.eclemma.org/