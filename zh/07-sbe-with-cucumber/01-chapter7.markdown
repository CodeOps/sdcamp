# 需求管理和Cucumber #

在一个项目中，需求是推动整个软件开发的源泉。它确定了方向，方向（需求）错了，后面开发测试的再辛苦，再正确都是白搭。

在本章，我们一起来学习需求管理中现在最有效果的一种实践-实例化需求（Specification by example)。同时会通过学习相关联的Cucumber软件来切身体会怎么将需求贯穿下去。

## 需求的困惑 ##

如果你做过开发，就知道软件开发的最大问题之一就是需求，而且它也很容易的被作为替罪羊。在公司项目延迟和出大问题的最大借口（也是事实），就是“需求不清楚”。

那把需求找点弄清楚不就行了嘛？听着挺容易，需求不清楚，不能开始项目，需求文档必须高级人员一起审核，实际上这就是瀑布模型中的思路，大家已经知道它不大行得通，因为早期把所有的需求都弄清楚不太容易。

敏捷迭代起来以后是否就好点呢。理论上会好点，因为需求在一个迭代中东西会少点，有机会理清楚一点。但就是因为一个迭代的周期短，在开完计划会议后（Planning meeting），团队会很快愿意投入到代码开发中去，他们认为需求已经清楚了。

实际上，往往到迭代的后面几天开始测试的时候发现，测试人员、开发人员、产品负责人想的都不是很一样，但时间不够了，这就是技术债务（Technical Debt)的最大根源。

那是否有好的办法把需求质量有效得提高？

### 实例化需求 ###

#### 例子 1 ####

## Cucumber ##
Cucumber是一个实例化需求的极佳实现工具

### 安装 ###
在Windows上，RubyInstaller提供了ruby的环境，下载安装包（如`rubyinstaller-1.9.3-p0.exe`)，运行即可，别忘了把“Ruby放入PATH中”的选项选上。

Insert 18333fig0701.png 
图 7-1. 本地版本控制系统

	$ gem install cucumber # 如果需要配代理，-p http://<proxyserver>:<port>
	$ gem install rspec # cucumber 需要

### 基本知识 ###

#### 基本语法 ####
Cucumber使用的是

#### 常用的目录结构 ####


### 例子Calculator ###

### 例子用cucumber实现 ###

### 课后练习 ###

## 总结 ##

实例化需求是一种很棒的协作探索需求的好办法，但是要用熟练了还是很有难度得。Cucumber也只是一种工具，如果不理解实例化需求说明的真正意义，它会被用得很累，好自为之。

## 参考 ##
 1. Specification by example. 